@inject IAppVersionService AppVersionService
@inject HttpClient httpClient
<!-- Sidebar -->
<div id="sidebar" class="@inactiveCss">

    <div class="inner">

        <!-- Search Box -->
        <section id="search" class="alt">
            <AuthorizeView>
                <h3 id="given-name-logo">@context.User.Claims.FirstOrDefault(u => u.Type == "given_name")?.Value</h3>
            </AuthorizeView>
        </section>

        <!-- Menu -->
        <nav id="menu">
            <ul>
                <li><a href="/">Новости</a></li>
                @if (sitePages is null)
                {
                    <MudProgressCircular Indeterminate="true"></MudProgressCircular>
                }
                else
                {

                    @foreach (var sitePage in sitePages)
                    {
                        <li><a href="@sitePage.Url">@sitePage.Name</a></li>
                    }

                }
                <li><a href="pdf">Файлы</a></li>
                <AuthorizeView Roles="@GlobalVarables.Roles.ADMIN">
                    <li><a href="admin">Панель управления</a></li>
                </AuthorizeView>
                <AuthorizeView>
                    <li><a href="survey">Выбрать тему курса</a></li>
                </AuthorizeView>
            </ul>
        </nav>

        <!-- Footer -->
        <footer id="footer">
            <p class="copyright">
                Лаборатория ИОТ
                <br> Петрозаводское ПКУ &copy; 2021
                <br> v @AppVersionService.Version
            </p>
        </footer>

    </div>

    <a @onclick="Toggle" class="toggle"></a>

</div>

@code {

    bool inactive = true;

    string inactiveCss => inactive ? null : "inactive";

    private List<SitePage> sitePages = null;

    protected override async Task OnInitializedAsync()
    {
        sitePages = await httpClient.GetFromJsonAsync<List<SitePage>>("api/sitepage/all");

    }

    void Toggle()
    {
        inactive = !inactive;
    }
}
